/**
 * os.oil this is the Event Control Coding Exercise Starter oil description 
 * some of the oil object below are empty you have to complete them as per the requirements 
 * 
 * PLEASE FOLLOW THE SAME FORMAT EXACTLY AND DON'T CHANGE THE INDENTATION OR THE SPACING 
 * PLEASE DON'T ADD ANY BLANK LINE 
 * PLEASE ADD A SPACE AROUND THE '=' SIGN WHEN YOU ASSIGN A VALUE TO AN ATTRIBUTE AS BELOW: 
 *             CYCLETIME = 400 NOT CYCLETIME=400 
 * PLEASE KEEP THE CLOSING BRACE IN A SEPARATE LINE AND THE OPENING BRACE IN THE SAME LINE AS BELOW
 *             AUTOSTART = TRUE { 
 *                   ..
 *                   ... 
 *             }; 
 *
 */
CPU CORTEX-M4 {
   OS S_OSEK {
      STATUS = EXTENDED ;
      STARTUPHOOK = FALSE;
      ERRORHOOK = FALSE;
      STACKOVERFLOWHOOK = FALSE;
      SHUTDOWNHOOK = FALSE;
      PRETASKHOOK = FALSE;
      POSTTASKHOOK = FALSE;
      USEGETSERVICEID = FALSE;
      USEPARAMETERACCESS = FALSE;
      USERESSCHEDULER = FALSE;
      SYSTEMTICKMS = 10 ; 
   };
   TASK AppTask_PwmHandler{
      PRIORITY = 11;
      SCHEDULE = FULL;
      ACTIVATION = 1;
      AUTOSTART = TRUE; 
      STACKSIZE = 50;
      EVENT = EventPwmOn ; 
      EVENT = EventPwmOff ; 
      RESOURCE = PWM_WIDTH;
   };  
   TASK AppTask_PulseWidthUpdate{
      PRIORITY = 10;
      SCHEDULE = FULL;
      ACTIVATION = 1;
      AUTOSTART = TRUE; 
      STACKSIZE = 50;
      EVENT = EventPwmUpdate ; 
      RESOURCE = PWM_WIDTH;
   }
   ALARM Alrm_PulseWidthUpdate {
      COUNTER = MainCounter;
      ACTION = SETEVENT  {
         TASK = AppTask_PulseWidthUpdate;
         EVENT = EventPwmUpdate; 
      };
      AUTOSTART = TRUE {
         ALARMTIME = 200; 
         CYCLETIME = 10; 
      };
   }
   ALARM Alrm_PwmOn {
      COUNTER = MainCounter;
      ACTION = SETEVENT  {
         TASK = AppTask_PwmHandler;
         EVENT = EventPwmOn; 
      };
      AUTOSTART = TRUE {
         ALARMTIME = 200; 
         CYCLETIME = 10; 
      };
   };
   ALARM Alrm_PwmOff {
            COUNTER = MainCounter;
      ACTION = SETEVENT  {
         TASK = AppTask_PwmHandler;
         EVENT = EventPwmOff; 
      };
      AUTOSTART = FALSE;
   };   
   COUNTER MainCounter {
      MINCYCLE = 1;
      MAXALLOWEDVALUE = 0xFFFFFFFF;
      TICKSPERBASE = 1;
   };
   EVENT EventPwmOff{
            MASK = AUTO ; 
   }
   EVENT EventPwmOn{
            MASK = AUTO ; 
   }
   EVENT EventPwmUpdate{
            MASK = AUTO ; 
   }
   RESOURCE PWM_WIDTH {
      RESOURCEPROPERITY = STANDARD;
   }
};
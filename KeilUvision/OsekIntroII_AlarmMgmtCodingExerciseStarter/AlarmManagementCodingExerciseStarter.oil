/**
 * os.oil this is the Alarm Management Coding Exercise Starter oil description 
 * some of the oil object below are empty you have to complete them as per the requirements 
 * 
 * PLEASE FOLLOW THE SAME FORMAT EXACTLY AND DON'T CHANGE THE INDENTATION OR THE SPACING 
 * PLEASE DON'T KEEP ANY BLANK LINE 
 * PLEASE ADD A SPACE AROUND THE '=' SIGN WHEN YOU ASSIGN A VALUE TO AN ATTRIBUTE AS BELOW: 
 *             CYCLETIME = 400 NOT CYCLETIME=400 
 * PLEASE KEEP THE CLOSING BRACE IN A SEPARATE LINE AND THE OPENING BRACE IN THE SAME LINE AS BELOW
 *             AUTOSTART = TRUE { 
 *                   ..
 *                   ... 
 *             }; 
 *
 */
CPU CORTEX-M4 {
   OS S_OSEK {
      STATUS = EXTENDED ;
      STARTUPHOOK = FALSE;
      ERRORHOOK = FALSE;
      STACKOVERFLOWHOOK = FALSE;
      SHUTDOWNHOOK = FALSE;
      PRETASKHOOK = FALSE;
      POSTTASKHOOK = FALSE;
      USEGETSERVICEID = FALSE;
      USEPARAMETERACCESS = FALSE;
      USERESSCHEDULER = FALSE;
      SYSTEMTICKMS = 10 ; 
   };
   TASK AppTask_PulseWidthUpdate{
      PRIORITY = 20;
      SCHEDULE = FULL;
      ACTIVATION = 1;
      AUTOSTART = FALSE
      STACKSIZE = 50;
      RESOURCE = g_PwmValue;
   };         
   TASK AppTask_PwmOn{
      PRIORITY = 10;
      SCHEDULE = FULL;
      ACTIVATION = 1;
      AUTOSTART = FALSE
      STACKSIZE = 50;
      RESOURCE = g_PwmValue;
   }; 
   ALARM Alrm_PulseWidthUpdate {
      COUNTER = MainCounter;
      ACTION = ACTIVATETASK  {
            TASK = AppTask_PulseWidthUpdate;
      };
      AUTOSTART = TRUE {
            ALARMTIME = 200; 
            CYCLETIME = 50;
      };
   };
   ALARM Alrm_PwmOn {
      COUNTER = MainCounter;
      ACTION = ACTIVATETASK  {
            TASK = AppTask_PwmOn;
      };
      AUTOSTART = TRUE {
            ALARMTIME = 200; 
            CYCLETIME = 10;
      };
   };       
   ALARM Alrm_PwmOff {
      COUNTER = MainCounter;
      ACTION = ALARMCALLBACK  {
            ALARMCALLBACKNAME = "PwmOFF_CB";
      };
      AUTOSTART = FALSE;
   };      
   COUNTER MainCounter {
      MINCYCLE = 1;
      MAXALLOWEDVALUE = 0xFFFFFFFF;
      TICKSPERBASE = 1;
   };
   RESOURCE pwm_width {
      RESOURCEPROPERITY = STANDARD;
   }
};